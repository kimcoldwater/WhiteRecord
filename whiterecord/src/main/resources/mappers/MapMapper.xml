<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cs.projects.whiterecord.Mapper.MapMapper">

<select id="locationView" parameterType="cs.projects.whiterecord.util.MapCriteria" resultMap="LocationVO">
select a.lno , a.mno , a.x, a.y , a.lname , a.tel , a.address, a.raddress , a.resort, a.regdate, a.categori , a.foodtype , a.img , a.reviewcnt,a.likecnt,
b.mno,b.id,b.name,b.img
from 
(select lno , mno , x, y , lname , tel , address, raddress , resort, regdate, categori , foodtype , img , reviewcnt,likecnt,
ROW_NUMBER() OVER(order by lno desc) AS LNUM
from location
where 1=1
<if test="resort != '' ">AND resort = #{resort}</if>
<if test="categori != '' ">AND CATEGORI = #{categori}</if>
)a left outer join member b on a.mno = b.mno
where LNUM between #{rowStart} AND #{rowEnd}
order by a.lno desc
</select>

<select id="locationCount" resultType="int" parameterType="cs.projects.whiterecord.util.MapCriteria">
select count(*) from (select * from location
where 1=1
<if test="resort != '' ">AND resort = #{resort}</if>
<if test="categori != '' ">AND CATEGORI = #{categori}</if>
)where <![CDATA[ LNO > 0 ]]> 
</select>

<update id="locationImg">
update location set img = #{imgScr} where lno = #{lno}
</update>

<resultMap type="cs.projects.whiterecord.vo.LocationVO" id="LocationVO">
	<result column="lno" property="lno" />
	<result column="mno" property="mno" />
	<result column="resort" property="resort" />
	<result column="lname" property="lname" />
	<result column="tel" property="tel" />
	<result column="address" property="address" />
	<result column="raddress" property="raddress" />
	<result column="categori" property="categori" />
	<result column="x" property="x" />
	<result column="y" property="y" />
	<result column="categori" property="categori" />
	<result column="regdate" property="regdate" />
	<result column="img" property="img" />
	<result column="reviewcnt" property="reviewcnt" />	
	<result column="likecnt" property="likecnt" />	
	<collection property="memberVO" resultMap="MemberVO"></collection>

	</resultMap>
	
	<resultMap type="cs.projects.whiterecord.vo.MemberVO" id="MemberVO">
	<result column="mno" property="mno" />
	<result column="id" property="id" />
	<result column="name" property="name" />
	<result column="img" property="img" />
	</resultMap>
	
	
	
	<select id="reviewContent" parameterType="cs.projects.whiterecord.util.ReviewCriteria" resultMap="ReviewVO">
	select a.rno , a.mno , a.lno ,a.title, a.content , a.regdate , a.viewcnt , a.likecnt ,a.rimg ,a.resort,a.categori, b.mno , b.name , 
	b.id , b.img
	from 
	(select rno , mno , lno, title, content, regdate , viewcnt, likecnt, rimg ,resort,categori, ROW_NUMBER() OVER (order by rno desc) AS RNUM 
	from review
	where
	categori = #{categori} AND resort = #{resort}
    <if test="lno != 0 ">AND lno = #{lno}</if>
    )a left join member b on a.mno = b.mno
    where RNUM between #{rowStart} AND #{rowEnd}
	order by a.rno desc
    
	
	</select>
	
	<select id="reviewCount" parameterType="cs.projects.whiterecord.util.ReviewCriteria" resultType="int">
	select count(*) from (select * from review
	where
	categori = #{categori} AND resort = #{resort}
	<if test="lno != 0 ">AND lno = #{lno}</if>
	)where <![CDATA[ RNO > 0 ]]> 
	</select>
	
	<resultMap type="cs.projects.whiterecord.vo.ReviewVO" id="ReviewVO">
	<result column="lno" property="lno" />
	<result column="mno" property="mno" />
	<result column="rno" property="rno" />
	<result column="title" property="title" />
	<result column="content" property="content" />
	<result column="regdate" property="regdate" />
	<result column="viewcnt" property="viewcnt" />
	<result column="likecnt" property="likecnt" />
	<result column="resort" property="resort" />
	<result column="categori" property="categori" />
	<result column="rimg" property="rimg" />
	<collection property="memberVO" resultMap="MemberVO"></collection>

	</resultMap>
	
	<update id="reviewCnt">
	update location set reviewcnt = reviewcnt + 1 where lno = #{lno}
	</update>
	
	<update id="reviewCntDown">
	update location set reviewcnt = reviewcnt - 1 where lno = #{lno}
	</update>	
	
	<update id="reviewEdit">
	update review set title = #{title} , content = #{content} , resort = #{resort} , categori = #{categori} , rimg = #{rimg} where rno = #{rno}
	</update>

	<update id="reviewImgEdit">
	update review set rimg = #{rimg} where rno = #{rno}
	</update>
	
	<update id="reviewViewCnt">
	update review set viewcnt = viewcnt+1 where rno = #{rno}
	</update>
</mapper>